@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&display=swap');

@function color ($name) {
    @if not map-get($colors, $name+'') {
        @error "Color `#{$name}` not found in map $colors";
    }
    @return var(--#{unquote($name)});
}

@function size ($name) {
    @if not map-get($sizes, $name+'') {
        @error "Size `#{$name}` not found in map $sizes";
    }
    @return var(--#{unquote($name)});
}

@function fontSize ($name) {
    @if not map-get($font-sizes, $name+'') {
        @error "Font-size `#{$name} not found in map $font-sizes`";
    }
    @return var(--#{unquote($name)});
}

@mixin mq($size) {
    $breakpoint: map-get($breakpoits, $size);

    @media (min-width: $breakpoint) {
        @content;
    }
}

$ff-sans: 'Montserrat', sans-serif;

$font-sizes: (
    900: 3rem,
    800: 2.25rem,
    700: 1.875rem,
    600: 1.5rem,
    500: 1.25rem,
    400: 1.125rem,
    300: 1rem,
);

$fw-400: 400;
$fw-600: 600;

$breakpoints: (
    small: 30em,
    medium: 45em,
    large: 65em,
);

$colors: (
    primary-900: #222524,
    primary-800: #3946F9,
    primary-700: #5863F8, 
    neutral-900: #967caa,
    neutral-800: #c0b0cb,
    neutral-700: #EFEBF2,
    accent-900: #0b6267,
    accent-800: #16BAC5,
    accent-700: #35dde8,
);

$sizes: (
    16: 1rem,
    24: 1.5rem,
    32: 2rem,
    48: 3rem,
    64: 4rem,
    96: 6rem,
    128: 8rem,
    192: 12rem,
);

:root {
    @each $color, $shade in $colors {
        --#{$color}: #{$shade};
    }
    @each $font-name, $font-size in $font-sizes {
        --fs-#{$font-name}: #{$font-size};
    }
    @each $size-name, $size-value in $sizes {
        --size-#{$size-name}: #{$size-value};
    }
}

// https://piccalil.li/blog/a-modern-css-reset

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  all: unset;
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

.container {
    width: 80%;
    max-width: 1200px;
    margin: 0 auto;
}

.flex-nav {
    display: flex;
    justify-content: space-between;
}

// @use 'base';
// @use 'components';
// @use 'layout';
// @use 'utilities';
